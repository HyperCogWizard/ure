
                          Semantic Triples
                          ----------------
                      Linas Vepstas January 2009



IsA Sentences
-------------
Copulas, and "is-a" sentences in general, pose difficulties to naive
approaches of extracting is-a relations from text.  This section
examines some of these difficulties, and possible solutions.

Consider, for example: "Berlin is a city"
   _subj(be, Berlin)
   _obj(be, city)

Which suggests the deduction: _isa(city, Berlin) which can be produced by

# IF _subj(be, $var1) ^ _obj(be, $var2) THEN ^3_isa($var2, $var1)

However, the sentence: "The captial of Germany is Berlin.", when parsed,
has the subject and object in reverse order, and so, when this rule is
applied, returns a backwards IsA relation ('capital is a berlin'). The
preposition "of" signals the subect-object inversion; but also, the 
determiners clash for an is-a ('the capital is the berlin') -- we expect
the sentence patterns "x is a y" or "x is the y of ..." but not a naked
"x is the y".

   "Berlin is a city"
      DEFINITE-FLAG(Berlin, T)
      noun_number(Berlin, singular)
      noun_number(city, singular)
      _subj(be, Berlin)
      _obj(be, city)

   "The capital of Germany is Berlin."

      DEFINITE-FLAG(Germany, T)
      noun_number(Germany, singular)
      of(capital, Germany)
      DEFINITE-FLAG(capital, T)
      noun_number(capital, singular)
      DEFINITE-FLAG(Berlin, T)
      noun_number(Berlin, singular)
      _subj(be, capital)
      _obj(be, Berlin)

Ignoring the prepositional parts, we get:

      DEFINITE-FLAG(capital, T)
      noun_number(capital, singular)
      DEFINITE-FLAG(Berlin, T)
      noun_number(Berlin, singular)
      _subj(be, capital)
      _obj(be, Berlin)

This suggests that the correct rule for is-a relations is:

   # IF _subj(be, $var1) ^ _obj(be, $var2) 
       ^ !DEFINITE-FLAG($var2)
       THEN ^3_isa($var2, $var1)

The ! in front of DEFINITE-FLAG means "not" or "invert"; the 
DEFINITE-FLAG must be absent, or, if present, must be false.
Note that all top-level clauses (subj, obj, etc.) must have truth
values set so that they're true. This is because the truth value
is examined to compute the effect of !. The default truth value
in Opencog is (false, unconfident), so it must be over-ridden
to state (true, confident).

Another case where we must be careful is with hypothetical statements
or questions that superficially resemble statements. For example, the 
question: "Is Berlin a capital?" parses out to:

   _subj (be, Berlin) 
   _obj (be, capital) 
   TRUTH-QUERY-FLAG (capital, T)
   TRUTH-QUERY-FLAG (be, T)
   HYP (be, T)

If the truth-query and hyp flags are ignored, then this parse can be
mistaken for a statement, not a question.  This suggests that the rules
should include a !HYP term in them.  The above is implemented in
"triple-rule-6" in "rules.scm".

...

Consider now: "Men are mortal."
   _predadj(men, mortal)

which suggests the rule:

 # IF _predadj($var1, $var2) THEN ^3_isa($var2, $var1)

However, prepositions again confound word order:
Input sentence: "The color of the sky is blue."
   of(color, sky)
   _predadj(color, blue)

By ignoring the preposition, the sentence becomes: "color is blue", 
i.e. that 'colors' are a kind-of blue, which is inverted from the 
intended sense. The next-most naive rule is then:

  # IF _predadj($var1, $var2) ^ 
       ! $prep($var1,$var3)
       THEN ^3_isa($var2, $var1)

and also the inverted word-order case:

  # IF _predadj($var1, $var2) ^ 
       $prep($var1,$var3)
       THEN ^3_isa($var1, $var2)

However, this doesn't quite work because  $prep($var2,$var3) is so broad
that it can match to just about anything, including things are not 
DefinedLinguisticRelationship nodes. Thus, to get a proper match, we need 
to force type matching in variables.

XXX finish me w.r.t the variables ... 
...

Other problems: Consider the sentences:
"A hospital is a place where you go when you are sick."

One may deduce that "A hospital is a place", but one must be careful
in making use of such knowledge....


Yes-No Questions
----------------
Question:
    Is Berlin a capital?

Parse:
   _subj (be, Berlin) 
   _obj (be, capital) 
   TRUTH-QUERY-FLAG (capital, T)
   TRUTH-QUERY-FLAG (be, T)
   HYP (be, T)


