
                             wsd-post
                             --------
                 Linas Vepstas == December 2008
  Miscellaneous scripts for post-processing word-sense disambiguation data.


The wsd directory contains an implementation of the Rada Mihalcea word-sense
disambiguation algorithm. The scm directory contains a set of scripts that
attach word senses to link-grammar parse disjuncts, and then update the 
corresponding scripts in SQL tables. SQL is used because it can take weeks
(or months) to accumulat a sufficient amount of statistics to be meaningul.
This directory contains code that implements the next steps in this processing
pipeline: scripts to compute marginal probabilities, obtained from the raw
counts stored in the SQL database.

The general analysis framework here is an outgrowth of the code that is found
in the 'lexical attraction' package, which is a distinct launchpad project.
In particular, the SQL table definitions are given there, not here. This
cross-project tie-in is a bit of a mess at the moment;  its not clear how
to best resolve it.

Overview, Notes
---------------
The database contains counts for triples consisting of (sense, disjunct, word)
where 'sense' is a wordnet sense-key, obtained by the Mihalcea algo, 'disjunct'
is a link-grammar disjunct that was used to link a given word instance, and 
'word' is an word instance (as used in some sentence) in 'inflected' form (in
the form in which it appears in a link-grammar dictionary). The inflections
are typically '.v' for verbs, '.g' for gerunds, etc.

(Need explanation of why we're doing this)


The probability of interest is p(s|d,w). If this is close to 1, this indicates
that a a certain word sense is being used almost uniquly/exclusively in a
certain context. By contrast, if this is close to zero, this indicates that 
the given sense is almost never used with the disjunct.

Also interesting is the entropy of a disjunct-word pair, summed over senses:
H(d,w) = - \sum_s p(s|d,w) log_2 p(s|d,w)

The basic idea is that low-entropy word-disjunct pairs imply a strong
clustering of disjuncts-to-senses.

---------------
select * from disjunctsenses order by count desc;

select * from disjuncts order by count desc;
select * from disjuncts where log_cond_probability > 0.0 order by log_cond_probability asc;

rattle() package.
