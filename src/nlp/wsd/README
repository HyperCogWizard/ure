
                      Word Sense Disambiguation
                      -------------------------
                           Working Notes 
                      Linas Vepstas April 2008


This document contains working notes for the mapping of wordnet ideas
onto opencog structures. It also describes how words in a parsed
sentence are associated with different word senses.


Word senese or word concepts
----------------------------
Associated with every word is a list of possible senses.
Consider the word "bark", thus:

    <WordNode name="bark" />   -- a word.

A "word sense" is a bag of information about a single semantic
sense of a word. This bag includes information about the part-of-speech
(noun, verb, etc.), example usages, pointers to synonym sets (synsets),
hyponyms, hypernyms, etc. Thus, a "word sense" is an unordered link.

In the opencog type heirarchy, (type.script)
   WORD_SENSE_LINK <- SET_LINK

A WordSenseLink will, of course, include the word itself:

   <WordSenseLink>
      <WordNode name="bark" />
   </WordSenseLink>

Word senses can be crudely categorized according to part-of-speech.
Thus:
   PART_OF_SPEECH_NODE <- NODE

and

   <WordSenseLink>
      <WordNode name="bark" />
      <PartOfSpeechNode name="noun" />
   </WordSenseLink>

[[ Actually, it is probably better to represent word attributes as
follows -- by example -- 
   <DefinedLinguisticConceptNode name="#pos#noun" />
   <DefinedLinguisticConceptNode name="#pos#verb" />
   <DefinedLinguisticConceptNode name="#tense#past" />
   <DefinedLinguisticConceptNode name="#number#singular" />
   <DefinedLinguisticConceptNode name="#number#uncountable" />
   <DefinedLinguisticConceptNode name="#entity#person" />
   <DefinedLinguisticConceptNode name="#entity#place" />

and so on. The goal here is to avoid having to maintain a large stable
of types for word attributes. Of course, other representations are
possible; the above seems to be simple and straight-forward, and should
do until such time that some more complex structure is needed. 

Note, however, that not all of the above will appear in a word sense:
thus, while we may want to mark a word-sense with a part-of-speech,
we don't want to mark up tense ... at least not right now, not in this
narrow view.  ]]

Each of these nodes and links are assigned a truth value of 1 and a
confidence of 1. Non-unit truthvalues & confidence will be used when 
relating word senses to the use of actual words in sentences. Here, 
however, the goal is to state "this word might have this meaning, no 
matter how rarely used this meaing might be."

Word senses are commonly established by giving sister terms (loose 
synonyms), as well as hypernyms, hyponyms, part holonyms, etc. A 
synonym/hypernym/hyponym/etc. are thus links. Since some sister
terms are closer than others, these links will have non-unit truth
values. Thus:

   HYPERNYM_LINK <- CONCEPT_LINK
   HYPONYM_LINK <- CONCEPT_LINK

   <WordSenseLink>
      <WordNode name="bark" />
      <PartOfSpeechNode name="noun" />
      <HypernymLink strength=0.8 confidence=0.9 />
         <WordSenseLink>
            <WordNode name="covering" />
         </WordSenseLink>
      </HypernymLink>
      <HyponymLink strength=0.8 confidence=0.9 />
         <WordSenseLink>
            <WordNode name="cork" />
         </WordSenseLink>
      </HyponymLink>
   </WordSenseLink>

The above indicates that "bark" is a kind of "covering", and that 
"cork" is a kind of bark. Note that the hyper/hypo links link not
to word nodes, but to other word-sense links.  There may be many 
hypo/hyper links in a word sense.

There is a potential confusion as to the idea of a "synonym", as 
some synonyms are better than others. In an attempt to avoid this
confusion, and stay close to the wordnet idea of a "sister term", 
these will be called Sisnym's. The idea of a synonym will be reserved
for relations between words, rather than relations between concepts.

Thus:

   SISNYM_LINK <- CONCEPT_LINK
 
Wordnet uses the idea of "part holonyms", which is mirrored here.
Thus:

   HOLONYM_LINK <- CONCEPT_LINK
   MERONYM_LINK <- CONCEPT_LINK

To continue with the tree-bark example:

   <WordSenseLink>
      <WordNode name="bark" />
      <PartOfSpeechNode name="noun" />
      <HolonymLink strength=0.8 confidence=0.9>
         <WordSenseLink>
            <WordNode name="branch" />  <!-- bark is a part of a branch -->
         </WordSenseLink>
      </HolonymLink>
      <MeronymLink strength=0.8 confidence=0.9>
         <WordSenseLink>
            <WordNode name="lignin" />  <!-- bark is composed of lignin -->
         </WordSenseLink>
      </MeronymLink>
   </WordSenseLink>

Commentary
----------
Note that the WordSenseLink "bag of parts" was not endowed with a unique
identifier of some sort. That is, it did not contain a node resembling
the following:

   <ConceptNode name="bark_6372">

to label this particular word sense with the universal-unique label
"bark_6372".  There does not appear to be any reason (at this time) to
provide such a label.


Sentences to meanings
---------------------
Consider two sentences: "The loud bark woke me up." or "The rough bark
cut my finger." The goal of word-sense disambiguation is two-fold:
associate to all possible meanings of the word bark, and then, pick the
most likely meaning.

There are three things to distinguish: the word instance, as it occurs
in the sentence, the word sense, as described above, and the concept 
the word represents. The "word concept" is distinguished from the "word
sense", as being the concept within context of the sentence/text in 
which it appears. Thus, "We stood in the yard.  As she walked up to me,
I laid my hand on the old oak.  Its rough bark cut my finger."  The goal
is to distingusih the word-instance "bark", from the most likely
word-sense of "tree bark", from the concept "the bark of an oak tree in
a particular yard in which there are two people".

The distinction between the word instance and the concept is
accomplished by using WordInstanceNode and ConceptNode.

------
The current RelEx output is as follows, but this seems wrong, in light 
of the above discussions.

   <InheritanceLink>
      <WordInstanceNode name="bark_1234" />
      <ConceptNode name="bark_1" />
   </InheritanceLink>

   <ReferenceLink>
      <WordNode name="#bark">
      <ConceptNode = "bark_1">  <!-- the generic tree-bark concept -->
   </ReferenceLink>

One problem is the missing notion of the specific concept of the 
bark of a particular tree.  Another problem is that the generic 
tree-bark concept is refered to by a label "bark_1", yet, there
is no need to refer to it directly. Next, RelEx is not in a position
to guess whether or not a specific word-instance refers to a word sense;
this must be defered until after a word-sense disambiguation step.
And, of course, Relex is not in a position to guess at the specific
concept either.  These problems are remedied by the structure below.

------

XXXXXXXXXXXXXXXXXXXXXXX
Unfinished ... will do tommorrow.

RelEx should generate the following:

   <ReferenceLink>
      <WordInstanceNode name="bark_1234" />
      <WordNode name="#bark">
   </ReferenceLink>

The word-instance here is assigned a universal unique ID of "1234"
in order that it can be used to state the properties of this word
instance; thus:

   <InheritanceLink>
      <DefinedLinguisticConceptNode name="#pos#noun" />
      <WordInstanceNode name="bark_1234" />
   </InheritanceLink>

However, I think that perhaps a cleaner structure would be to make a
word instance a link, as opposed to a node. Thus, 

  <WordInstanceLink>
      <WordNode name="#bark">
      <DefinedLinguisticConceptNode name="#pos#noun" />
      <DefinedLinguisticConceptNode name="#count#uncountable" />
  </WordInstanceLink>

XXXX Maybe this is wrong .. 
  


-------------


XXX Ignore the flow. Its what the current code generates.


